// 混合器
// 这个文件包含通用的混合器
@use 'variables' as *; // 导入变量供 Mixins 使用
@use 'sass:color'; // 导入 Sass 的 color 模块
@use 'sass:map'; // 导入 Sass 的 map 模块

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 文本截断
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 多行文本截断
@mixin text-truncate-lines($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
}

// 盒阴影
@mixin box-shadow($shadow...) {
  box-shadow: $shadow;
}

// 过渡效果
@mixin transition($transition...) {
  transition: $transition;
}

// 变换
@mixin transform($transform...) {
  transform: $transform;
}

// 绝对定位居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 水平居中
@mixin horizontal-center {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

// 垂直居中
@mixin vertical-center {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

// Flex居中
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

// 背景图片覆盖
@mixin bg-cover {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

// 背景图片包含
@mixin bg-contain {
  background-size: contain;
  background-position: center;
  background-repeat: no-repeat;
}

// 渐变文本
@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-fill-color: transparent;
}

// 卡片悬停效果
@mixin card-hover {
  transition: $transition-base;

  &:hover {
    transform: translateY(-5px);
    box-shadow: $box-shadow-lg;
  }
}

// 按钮悬停效果 (通用)
// $y-translate: 悬停时垂直移动的距离
// $hover-shadow: 悬停时应用的阴影 (可选)
@mixin button-hover-effect($y-translate: -2px, $hover-shadow: null) {
  // 使用较快的过渡效果以获得更好的按钮反馈
  transition: transform $transition-fast, box-shadow $transition-fast, background-color $transition-fast, border-color $transition-fast, color $transition-fast;
  will-change: transform, box-shadow; // 优化动画性能
  &:hover, &:focus { // 同时应用于 focus 状态以提高可访问性
    transform: translateY($y-translate);
    @if $hover-shadow {
      box-shadow: $hover-shadow;
    }
  }
}

// 表单控件焦点效果
// $focus-border-color: 焦点状态下的边框颜色
// $focus-box-shadow-color: 焦点状态下阴影的颜色
@mixin form-control-focus($focus-border-color: $primary-light, $focus-box-shadow-color: rgba($primary, 0.25)) {
  &:focus {
    border-color: $focus-border-color;
    box-shadow: 0 0 0 $input-focus-width $focus-box-shadow-color;
    outline: 0; // 移除默认 outline
  }
}

// 自定义滚动条
@mixin custom-scrollbar($width: 8px, $track-color: #f1f1f1, $thumb-color: #888) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $width / 2;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;

    &:hover {
      background: color.adjust($thumb-color, $blackness: 10%);
    }
  }
}

// 禁止用户选择
@mixin user-select-none {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

// 允许用户选择
@mixin user-select-text {
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

// 触摸操作优化
@mixin touch-action-manipulation {
  touch-action: manipulation;
  -ms-touch-action: manipulation;
  -webkit-touch-action: manipulation;
}

// 文本大小调整
@mixin text-size-adjust {
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  text-size-adjust: 100%;
}

// 模糊背景
@mixin backdrop-blur($blur: 10px) {
  -webkit-backdrop-filter: blur($blur);
  backdrop-filter: blur($blur);
}

// 卡片样式
@mixin card-style {
  box-shadow: $box-shadow;
  transition: $transition-base;
  border: none;
  border-radius: $border-radius-lg;
  overflow: hidden;
}

// 按钮样式
@mixin button-style {
  border-radius: $border-radius;
  font-weight: $font-weight-medium;
  padding: $button-padding;
  transition: $transition-fast;
}

// 主按钮样式
@mixin primary-button {
  @include button-style;
  background: $primary-gradient;
  border: none;
  color: white;
  box-shadow: 0 4px 6px rgba($primary, 0.2);

  &:hover {
    background: $primary-gradient-hover;
    box-shadow: 0 6px 8px rgba($primary, 0.3);
    transform: translateY(-1px);
  }
}

// 次要按钮样式
@mixin secondary-button {
  @include button-style;
  background: $secondary-gradient;
  border: none;
  color: white;
  box-shadow: 0 4px 6px rgba($secondary, 0.2);

  &:hover {
    background: $secondary-gradient-hover;
    box-shadow: 0 6px 8px rgba($secondary, 0.3);
    transform: translateY(-1px);
  }
}

// 轮廓按钮样式
@mixin outline-button($color: $primary) {
  @include button-style;
  background: transparent;
  border: 1px solid $color;
  color: $color;

  &:hover {
    background-color: $color;
    color: white;
    box-shadow: 0 4px 6px rgba($color, 0.2);
  }
}

// 徽章样式
@mixin badge-style {
  padding: 0.25rem 0.4rem;
  min-width: 1.2em;
  min-height: 1.2em;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 0.65em;
  border-radius: 50%;
}

// 徽章悬停效果
// 为徽章添加悬停时的缩放和跳动效果
@mixin badge-hover-effect {
  transition: transform 0.2s ease, opacity 0.2s ease;

  &:hover {
    transform: scale(1.2);
    opacity: 0.9;
  }

  &:active {
    transform: scale(0.95);
  }
}

// 提醒变体样式
// Generates text, background, and border colors for an alert based on a base color.
// Uses sass:color functions for adjustments.
@mixin alert-variant($base-color, $text-adjust: (blackness: 30%), $bg-adjust: (lightness: 40%), $border-adjust: (lightness: 30%)) {
  // Adjust text color - often making it darker or adjusting saturation/lightness
  @if map-has-key($text-adjust, 'blackness') {
    color: color.adjust($base-color, $blackness: map-get($text-adjust, 'blackness'));
  } @else if map-has-key($text-adjust, 'lightness') {
    color: color.adjust($base-color, $lightness: map-get($text-adjust, 'lightness'));
  } @else {
    color: $base-color; // 默认值
  }

  // Adjust background color - typically making it much lighter
  @if map-has-key($bg-adjust, 'lightness') {
    background-color: color.adjust($base-color, $lightness: map-get($bg-adjust, 'lightness'));
  } @else {
    background-color: color.scale($base-color, $lightness: 40%);
  }

  // Adjust border color - often slightly darker than the background
  @if map-has-key($border-adjust, 'lightness') {
    border-color: color.adjust($base-color, $lightness: map-get($border-adjust, 'lightness'));
  } @else {
    border-color: color.scale($base-color, $lightness: 30%);
  }

  // Optional: Adjust link color within the alert
  .alert-link {
    color: color.adjust($base-color, $blackness: 40%); // Example: make links darker
  }
}

// 动画
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// 应用动画
@mixin animation($animation) {
  animation: $animation;
}

// 淡入动画
@mixin fade-in($duration: $animation-duration-normal) {
  @include animation(fadeIn $duration ease-out);
}

// 从左滑入动画
@mixin slide-in-left($duration: $animation-duration-normal) {
  @include animation(slideInLeft $duration ease-out);
}

// 从右滑入动画
@mixin slide-in-right($duration: $animation-duration-normal) {
  @include animation(slideInRight $duration ease-out);
}

// 脉冲动画
@mixin pulse($duration: $animation-duration-slow) {
  @include animation(pulse $duration infinite);
}

// 卡片悬停效果混合器
// $y-translate: 悬停时垂直移动的距离或效果类型('subtle')
// $hover-shadow: 悬停时应用的阴影
@mixin card-hover-effect($y-translate: -5px, $hover-shadow: $box-shadow-lg) {
  transition: transform $transition-base, box-shadow $transition-base;
  will-change: transform, box-shadow; // 优化动画性能

  &:hover {
    @if $y-translate == 'subtle' {
      // 更加克制的悬停效果
      transform: translateY(-2px);
      box-shadow: $box-shadow;
    } @else {
      transform: translateY($y-translate);
      @if $hover-shadow {
        box-shadow: $hover-shadow;
      }
    }
  }
}

// 高级卡片悬停效果
// 包含多种悬停效果，如上浮、缩放、边框高亮等
// $effect-type: 效果类型（float、scale、border、glow）
// $params: 效果参数
@mixin advanced-card-hover($effect-type: 'float', $params: ()) {
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;

  @if $effect-type == 'float' {
    &:hover {
      transform: translateY(-8px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    }
  } @else if $effect-type == 'scale' {
    &:hover {
      transform: scale(1.03);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }
  } @else if $effect-type == 'border' {
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      border-radius: inherit;
      border: 2px solid transparent;
      transition: border-color 0.3s ease;
    }

    &:hover::before {
      border-color: $primary;
    }
  } @else if $effect-type == 'glow' {
    &:hover {
      box-shadow: 0 0 20px rgba($primary, 0.4);
    }
  }
}

// 图片缩放悬停效果
// $scale: 悬停时的缩放比例
// $duration: 过渡时间
@mixin image-scale-hover($scale: 1.05, $duration: 0.6s) {
  overflow: hidden; // 确保父元素有这个属性

  img, .img-fluid, .card-img-top {
    transition: transform $duration ease;
    will-change: transform; // 优化动画性能

    // 使用父元素悬停时触发图片缩放，而不是图片本身悬停
    // 这样可以避免用户鼠标移动到图片上时的抖动效果
  }

  &:hover {
    img, .img-fluid, .card-img-top {
      transform: scale($scale);
    }
  }
}

// 渐变文本混合器
// $gradient: 文本渐变色
// $underline: 是否添加下划线
@mixin gradient-text-enhanced($gradient: $primary-gradient, $underline: true) {
  background: $gradient;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  color: transparent; // 标准属性，替代text-fill-color
  font-weight: $font-weight-bold;
  display: inline-block;
  position: relative;

  @if $underline {
    &::after {
      content: '';
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 60px;
      height: 4px;
      background: $gradient;
      border-radius: $border-radius;
    }
  }
}

// 筛选器按钮组样式
@mixin filter-button-group {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;

  .btn {
    border-radius: $border-radius;
    transition: $transition-fast;

    &:hover {
      transform: translateY(-2px);
    }
  }
}

// 内容块样式
@mixin content-block {
  background-color: white;
  border-radius: $border-radius-lg;
  box-shadow: $box-shadow;
  padding: 1.5rem;
  margin-bottom: 1.5rem;
  transition: $transition-base;

  &:hover {
    box-shadow: $box-shadow-lg;
  }
}

// 高级渐变按钮混合器
// $gradient: 按钮的渐变背景
// $hover-gradient: 悬停时的渐变背景
// $shadow-color: 阴影颜色
@mixin gradient-button($gradient: $primary-gradient, $hover-gradient: null, $shadow-color: rgba($primary, 0.3)) {
  background: $gradient;
  border: none;
  color: white;
  border-radius: 50px;
  padding: 0.75rem 1.8rem;
  font-weight: $font-weight-medium;
  box-shadow: 0 4px 15px rgba($shadow-color, 0.3);
  transition: all 0.3s ease;
  position: relative;
  z-index: 1;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: $hover-gradient;
    z-index: -1;
    transition: opacity 0.3s ease;
    opacity: 0;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 20px rgba($shadow-color, 0.4);

    &::before {
      opacity: 1;
    }
  }
}

// 3D按钮效果
// $color: 按钮的背景颜色
// $depth: 3D效果的深度
@mixin button-3d($color: $primary, $depth: 4px) {
  background-color: $color;
  border: none;
  color: white;
  border-radius: $border-radius;
  padding: 0.75rem 1.5rem;
  font-weight: $font-weight-medium;
  position: relative;
  box-shadow: 0 $depth 0 darken($color, 10%);
  transform: translateY(0);
  transition: all 0.2s ease;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 ($depth + 2px) 0 darken($color, 10%);
  }

  &:active {
    transform: translateY($depth);
    box-shadow: 0 0 0 darken($color, 10%);
  }
}

// --- Specific Animation Keyframes ---
// (Consider moving to a dedicated _animations.scss if many are added)

@include keyframes(fadeInDown) {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@include keyframes(fadeInUp) {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@include keyframes(fadeInLeft) {
  from {
    opacity: 0;
    transform: translateX(-10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@include keyframes(fadeInRight) {
  from {
    opacity: 0;
    transform: translateX(10px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}
